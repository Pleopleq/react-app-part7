{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintData = ({\n  data,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 14\n    }\n  }, data);\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const countryToSearch = newSearch;\n  const copyOfContries = countries;\n  let countryToSearchToUpper = '';\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Make the first letter of the search query uppercase\n\n  if (countryToSearch !== '') {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  console.log(searchBar); //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n\n  if (countryToSearch === '') {\n    searchBar = [];\n  }\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"debug: \", newSearch), searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintData, {\n    data: country.name,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","PrintData","data","index","App","countries","setContries","newSearch","setNewSearch","handleSearchBarChange","event","target","value","countryToSearch","copyOfContries","countryToSearchToUpper","searchBar","filter","el","name","includes","charAt","toUpperCase","substring","console","log","get","then","response","map","country","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAkB;AAC9B,sBAAO;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,IAAhB,CAAP;AACL,CAFD;;AAIA,MAAME,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMY,qBAAqB,GAAGC,KAAK,IAAG;AACpCF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAGN,SAAxB;AAEA,QAAMO,cAAc,GAAGT,SAAvB;AAEA,MAAIU,sBAAsB,GAAG,EAA7B;AAEA,MAAIC,SAAS,GAAGF,cAAc,CAACG,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQC,QAAR,CAAiBL,sBAAjB,CAA5B,CAAhB,CAfgB,CAkBhB;;AACA,MAAGF,eAAe,KAAK,EAAvB,EAA0B;AACxBE,IAAAA,sBAAsB,GAAGF,eAAe,CAACQ,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CT,eAAe,CAACU,SAAhB,CAA0B,CAA1B,CAAnE;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ,EAtBgB,CAyBhB;AACA;;AACA,MAAGH,eAAe,KAAK,EAAvB,EAA0B;AACxBG,IAAAA,SAAS,GAAG,EAAZ;AACD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACJ0B,GADD,CACK,sCADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBtB,MAAAA,WAAW,CAACsB,QAAQ,CAAC1B,IAAV,CAAX;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkB;AAClB,IAAA,KAAK,EAAEK,SADW;AAElB,IAAA,QAAQ,EAAEE,qBAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADJ,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaF,SAAb,CALF,EAMKS,SAAS,CAACa,GAAV,CAAc,CAACC,OAAD,EAAU3B,KAAV,kBACb,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE2B,OAAO,CAACX,IAAzB;AAA+B,IAAA,GAAG,EAAEhB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CANL,CADA;AAYD,CAnDD;;AAqDAJ,QAAQ,CAACgC,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintData = ({data, index}) =>{\n      return <p key={index}>{data}</p> \n}\n\nconst App = () => {\n\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = countries;\n\n  let countryToSearchToUpper = '';\n  \n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n\n\n  //Make the first letter of the search query uppercase\n  if(countryToSearch !== ''){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n  console.log(searchBar)\n  \n  \n  //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n  if(countryToSearch === ''){\n    searchBar = [];\n  }\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n    })\n  }, [])\n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n    <div>debug: {newSearch}</div>\n      {searchBar.map((country, index) =>\n        <PrintData data={country.name} key={index}></PrintData>\n      )}\n  </div>\n  )\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}