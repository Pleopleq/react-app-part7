{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nlet singleCountry = [];\n\nconst getOneCountry = name => {\n  axios.get(`https://restcountries.eu/rest/v2/name/${name}`).then(response => {\n    singleCountry = response.data;\n  });\n};\n\nconst PrintListOfCountries = ({\n  name,\n  warning,\n  index\n}) => {\n  const handleShowClick = e => {\n    console.log(e.target.value);\n  };\n\n  if (warning) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, warning);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, name, \"  \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: getOneCountry(name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }\n    }, \"Show\")));\n  }\n};\n\nconst PrintCountry = ({\n  name,\n  capital,\n  population,\n  flag,\n  language\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Capital: \", capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Population: \", population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, language.map((element, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    }, element.name);\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: flag,\n    width: 240,\n    alt: 'country flag',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const countryToSearch = newSearch;\n  const copyOfContries = countries;\n  let countryToSearchToUpper = ''; //Make the first letter of the search query uppercase\n\n  if (countryToSearch !== '') {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n\n  if (countryToSearch === '') {\n    searchBar = [];\n  }\n\n  if (searchBar.length > 10) {\n    searchBar = [{\n      warning: 'Woops, too many matches. Be more specific'\n    }];\n  }\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  const listOfCountries = searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintListOfCountries, {\n    name: country.name,\n    key: index,\n    warning: country.warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }));\n  const specificCountry = singleCountry.map(country => /*#__PURE__*/React.createElement(PrintCountry, {\n    name: country.name,\n    capital: country.capital,\n    population: country.population,\n    flag: country.flag,\n    language: country.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, singleCountry.length === 1 ? specificCountry : listOfCountries));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","singleCountry","getOneCountry","name","get","then","response","data","PrintListOfCountries","warning","index","handleShowClick","e","console","log","target","value","PrintCountry","capital","population","flag","language","map","element","App","countries","setContries","newSearch","setNewSearch","handleSearchBarChange","event","countryToSearch","copyOfContries","countryToSearchToUpper","charAt","toUpperCase","substring","searchBar","filter","el","includes","length","listOfCountries","country","specificCountry","languages","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nlet singleCountry = [];\n\nconst getOneCountry = (name) => {\n  axios\n  .get(`https://restcountries.eu/rest/v2/name/${name}`)\n  .then(response => {\n    singleCountry = response.data\n  })\n}\nconst PrintListOfCountries = ({name, warning, index}) =>{\n\n  const handleShowClick = (e) =>{\n    console.log(e.target.value)\n  }\n\n  if(warning){\n    return <h1>{warning}</h1>\n  } else {\n    return (\n      <div>\n        <p key={index}>{name}  <button onClick={getOneCountry(name)}>Show</button></p> \n      </div>\n    )\n  }\n}\n\nconst PrintCountry = ({name, capital, population, flag, language}) =>{\n  return (\n  <div>\n    <h1>{name}</h1>\n    <p>Capital: {capital}</p> \n    <p>Population: {population}</p>\n    <h2>Languages</h2>\n    <ul>\n    {language.map((element, index) => {\n      return <li key={index}>{element.name}</li>\n    })}\n    </ul>\n    <img src={flag} width={240} alt={'country flag'}></img>\n  </div>\n  ) \n}\n\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = countries;\n\n  let countryToSearchToUpper = '';\n\n  //Make the first letter of the search query uppercase\n  if(countryToSearch !== ''){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n\n  //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n  if(countryToSearch === ''){\n    searchBar = [];\n  }\n\n  if(searchBar.length > 10){\n    searchBar = [{ warning: 'Woops, too many matches. Be more specific'}]\n  }\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n      console.log(response.data)\n    })\n  },[])\n\n  const listOfCountries = searchBar.map((country, index) =>    \n    <PrintListOfCountries\n    name={country.name} \n    key={index}\n    warning={country.warning}>\n    </PrintListOfCountries>\n  )\n  \n  const specificCountry = singleCountry.map(country => \n    <PrintCountry \n    name={country.name} \n    capital={country.capital} \n    population={country.population} \n    flag={country.flag}\n    language={country.languages}>\n    </PrintCountry>\n  )\n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n      <div>\n      {singleCountry.length === 1 \n      ? specificCountry \n      : listOfCountries\n      }\n      </div>\n  </div>\n  )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}