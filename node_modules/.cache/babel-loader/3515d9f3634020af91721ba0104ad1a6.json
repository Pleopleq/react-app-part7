{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintData = ({\n  name,\n  capital,\n  population,\n  flag,\n  language,\n  index,\n  warning\n}) => {\n  if (warning) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 10\n      }\n    }, warning);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, \"Capital: \", capital), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    }, \"Population: \", population), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }\n    }, \"languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, language.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }\n      }, element.name);\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: flag,\n      width: 240,\n      alt: 'country flag',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }));\n  }\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const countryToSearch = newSearch;\n  const copyOfContries = countries;\n  let countryToSearchToUpper = ''; //Make the first letter of the search query uppercase\n\n  if (countryToSearch !== '') {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n\n  if (countryToSearch === '') {\n    searchBar = [];\n  }\n\n  if (searchBar.length > 10) {\n    searchBar = [{\n      warning: 'Woops, too many matches. Be more specific'\n    }];\n  }\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"debug: \", newSearch), searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintData, {\n    name: country.name,\n    capital: country.capital,\n    population: country.population,\n    flag: country.flag,\n    language: country.languages,\n    key: index,\n    warning: country.warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","PrintData","name","capital","population","flag","language","index","warning","map","element","App","countries","setContries","newSearch","setNewSearch","handleSearchBarChange","event","target","value","countryToSearch","copyOfContries","countryToSearchToUpper","charAt","toUpperCase","substring","searchBar","filter","el","includes","length","get","then","response","data","country","languages","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintData = ({name, capital, population, flag, language,  index, warning}) =>{\nif(warning){\n  return <h1>{warning}</h1>\n} else { \n  return (\n  <div>\n    <h1 key={index}>{name}</h1>\n    <p>Capital: {capital}</p> \n    <p>Population: {population}</p>\n    <h2>languages</h2>\n    <ul>\n    {language.map((element, index) => {\n      return <li key={index}>{element.name}</li>\n    })}\n    </ul>\n    <img src={flag} width={240} alt={'country flag'}></img>\n  </div>\n  ) \n  }\n}\n\nconst App = () => {\n\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = countries;\n\n  let countryToSearchToUpper = '';\n\n  //Make the first letter of the search query uppercase\n  if(countryToSearch !== ''){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n\n  //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n  if(countryToSearch === ''){\n    searchBar = [];\n  }\n\n  if(searchBar.length > 10){\n    searchBar = [{ warning: 'Woops, too many matches. Be more specific'}]\n  }\n  \n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n    })\n  }, [])\n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n    <div>debug: {newSearch}</div>\n      {searchBar.map((country, index) =>\n        <PrintData \n        name={country.name} \n        capital={country.capital} \n        population={country.population} \n        flag={country.flag}\n        language={country.languages}\n        key={index}\n        warning={country.warning}>\n        </PrintData>\n      )}\n  </div>\n  )\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}