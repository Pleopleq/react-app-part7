{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nconst api_key = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [getCapitalName, setCapitalName] = useState([]);\n  const [getWeather, setWeather] = useState([]);\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n    setSelectedCountry([]);\n  };\n\n  const handleShowClick = event => {\n    const name = event.target.parentNode.innerText.replace('Show', ''); //Single country api call\n\n    axios.get(`https://restcountries.eu/rest/v2/name/${name}`).then(response => {\n      setSelectedCountry(response.data);\n    }); //Weather of single country api call\n\n    axios.get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${name}`).then(response => {\n      setCapitalName(response.data.location);\n      setWeather(response.data.current);\n    });\n  };\n\n  const formatSearchInput = () => {\n    const countryToSearch = newSearch;\n    const copyOfContries = countries;\n    let countryToSearchToUpper = ''; //Make the first letter of the search query uppercase\n\n    if (countryToSearch !== '') {\n      countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n    }\n\n    let searchBarInput = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Set the countries array to an empty array to prevent to print all\n    //the contries at once\n\n    if (countryToSearch === '') {\n      searchBarInput = [];\n    }\n\n    if (searchBarInput.length > 10) {\n      searchBarInput = [{\n        warning: 'Woops, too many matches. Be more specific'\n      }];\n    }\n\n    return searchBarInput;\n  };\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n    });\n  }, []);\n\n  const ViewControl = ({\n    selected\n  }) => {\n    let searchBar = formatSearchInput();\n\n    if (selected.length === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }\n      }, selectedCountry.map((country, index) => /*#__PURE__*/React.createElement(PrintCountry, {\n        name: country.name,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flag,\n        language: country.languages,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(PrintWeatherOfCountry, {\n        name: getCapitalName.name,\n        temperature: getWeather.temperature,\n        icon: getWeather.weather_icons,\n        description: getWeather.weather_descriptions,\n        windspeed: getWeather.wind_speed,\n        winddirection: getWeather.wind_dir,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }\n      })));\n    }\n\n    return searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintListOfCountries, {\n      name: country.name,\n      key: index,\n      warning: country.warning,\n      getOne: handleShowClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }, \"Find countries\"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(ViewControl, {\n    selected: selectedCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","api_key","process","env","REACT_APP_API_KEY","App","countries","setContries","newSearch","setNewSearch","selectedCountry","setSelectedCountry","getCapitalName","setCapitalName","getWeather","setWeather","handleSearchBarChange","event","target","value","handleShowClick","name","parentNode","innerText","replace","get","then","response","data","location","current","formatSearchInput","countryToSearch","copyOfContries","countryToSearchToUpper","charAt","toUpperCase","substring","searchBarInput","filter","el","includes","length","warning","ViewControl","selected","searchBar","map","country","index","capital","population","flag","languages","temperature","weather_icons","weather_descriptions","wind_speed","wind_dir","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACe,cAAD,EAAiBC,cAAjB,IAAmChB,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACiB,UAAD,EAAaC,UAAb,IAA2BlB,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMmB,qBAAqB,GAAGC,KAAK,IAAG;AACpCR,IAAAA,YAAY,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACAR,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAHD;;AAKA,QAAMS,eAAe,GAAIH,KAAD,IAAU;AAChC,UAAMI,IAAI,GAAGJ,KAAK,CAACC,MAAN,CAAaI,UAAb,CAAwBC,SAAxB,CAAkCC,OAAlC,CAA0C,MAA1C,EAAiD,EAAjD,CAAb,CADgC,CAGhC;;AACAxB,IAAAA,KAAK,CACJyB,GADD,CACM,yCAAwCJ,IAAK,EADnD,EAECK,IAFD,CAEMC,QAAQ,IAAI;AAChBhB,MAAAA,kBAAkB,CAACgB,QAAQ,CAACC,IAAV,CAAlB;AACD,KAJD,EAJgC,CAUhC;;AACA5B,IAAAA,KAAK,CAACyB,GAAN,CAAW,kDAAiDxB,OAAQ,UAASoB,IAAK,EAAlF,EACCK,IADD,CACMC,QAAQ,IAAG;AACfd,MAAAA,cAAc,CAACc,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAd;AACAd,MAAAA,UAAU,CAACY,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAV;AACD,KAJD;AAKD,GAhBD;;AAkBA,QAAMC,iBAAiB,GAAI,MAAK;AAC9B,UAAMC,eAAe,GAAGxB,SAAxB;AACA,UAAMyB,cAAc,GAAG3B,SAAvB;AACA,QAAI4B,sBAAsB,GAAG,EAA7B,CAH8B,CAK9B;;AACA,QAAGF,eAAe,KAAK,EAAvB,EAA0B;AACxBE,MAAAA,sBAAsB,GAAGF,eAAe,CAACG,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CJ,eAAe,CAACK,SAAhB,CAA0B,CAA1B,CAAnE;AACD;;AAED,QAAKC,cAAc,GAAGL,cAAc,CAACM,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACnB,IAAH,CAAQoB,QAAR,CAAiBP,sBAAjB,CAA5B,CAAtB,CAV8B,CAW9B;AACA;;AACA,QAAGF,eAAe,KAAK,EAAvB,EAA0B;AACxBM,MAAAA,cAAc,GAAG,EAAjB;AACD;;AAED,QAAGA,cAAc,CAACI,MAAf,GAAwB,EAA3B,EAA8B;AAC5BJ,MAAAA,cAAc,GAAG,CAAC;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAjB;AACD;;AAEH,WAAOL,cAAP;AACC,GAtBD;;AAwBAxC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACJyB,GADD,CACK,sCADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBpB,MAAAA,WAAW,CAACoB,QAAQ,CAACC,IAAV,CAAX;AACD,KAJD;AAKD,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMgB,WAAW,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAe;AACjC,QAAIC,SAAS,GAAGf,iBAAiB,EAAjC;;AAEA,QAAGc,QAAQ,CAACH,MAAT,KAAoB,CAAvB,EAAyB;AACzB,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEhC,eAAe,CAACqC,GAAhB,CAAoB,CAACC,OAAD,EAAUC,KAAV,kBACpB,oBAAC,YAAD;AACE,QAAA,IAAI,EAAED,OAAO,CAAC3B,IADhB;AAEE,QAAA,OAAO,EAAE2B,OAAO,CAACE,OAFnB;AAGE,QAAA,UAAU,EAAEF,OAAO,CAACG,UAHtB;AAIE,QAAA,IAAI,EAAEH,OAAO,CAACI,IAJhB;AAKE,QAAA,QAAQ,EAAEJ,OAAO,CAACK,SALpB;AAME,QAAA,GAAG,EAAEJ,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAED,oBAAC,qBAAD;AACA,QAAA,IAAI,EAAErC,cAAc,CAACS,IADrB;AAEA,QAAA,WAAW,EAAEP,UAAU,CAACwC,WAFxB;AAGA,QAAA,IAAI,EAAExC,UAAU,CAACyC,aAHjB;AAIA,QAAA,WAAW,EAAEzC,UAAU,CAAC0C,oBAJxB;AAKA,QAAA,SAAS,EAAE1C,UAAU,CAAC2C,UALtB;AAMA,QAAA,aAAa,EAAE3C,UAAU,CAAC4C,QAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,CAZF,CADA;AA4BD;;AAED,WAAOZ,SAAS,CAACC,GAAV,CAAc,CAACC,OAAD,EAAUC,KAAV,kBACnB,oBAAC,oBAAD;AACE,MAAA,IAAI,EAAED,OAAO,CAAC3B,IADhB;AAEE,MAAA,GAAG,EAAE4B,KAFP;AAGE,MAAA,OAAO,EAAED,OAAO,CAACL,OAHnB;AAIE,MAAA,MAAM,EAAEvB,eAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAQC,GA1CD;;AA4CA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,oBAAmC;AACnC,IAAA,KAAK,EAAEZ,SAD4B;AAEnC,IAAA,QAAQ,EAAEQ,qBAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,CADJ,eAKI,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEN,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADA;AASD,CAnHD;;AAqHAX,QAAQ,CAAC4D,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nconst api_key = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  const [getCapitalName, setCapitalName] = useState([]);\n  const [getWeather, setWeather] = useState([]);\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n    setSelectedCountry([]);\n  }\n\n  const handleShowClick = (event) =>{\n    const name = event.target.parentNode.innerText.replace('Show','');\n\n    //Single country api call\n    axios\n    .get(`https://restcountries.eu/rest/v2/name/${name}`)\n    .then(response => {\n      setSelectedCountry(response.data);\n    });\n\n    //Weather of single country api call\n    axios.get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${name}`)\n    .then(response =>{\n      setCapitalName(response.data.location);\n      setWeather(response.data.current);\n    });\n  }\n\n  const formatSearchInput =  () =>{\n    const countryToSearch = newSearch;\n    const copyOfContries = countries;\n    let countryToSearchToUpper = '';\n  \n    //Make the first letter of the search query uppercase\n    if(countryToSearch !== ''){\n      countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n    }\n\n    let  searchBarInput = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n    //Set the countries array to an empty array to prevent to print all\n    //the contries at once\n    if(countryToSearch === ''){\n      searchBarInput = [];\n    }\n\n    if(searchBarInput.length > 10){\n      searchBarInput = [{ warning: 'Woops, too many matches. Be more specific'}]\n    }   \n\n  return searchBarInput\n  }\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n    });\n  },[])\n\n  const ViewControl = ({selected}) =>{\n    let searchBar = formatSearchInput();\n\n    if(selected.length === 1){\n    return(\n    <div>\n    {\n      selectedCountry.map((country, index) =>  \n      <PrintCountry \n        name={country.name} \n        capital={country.capital} \n        population={country.population} \n        flag={country.flag}\n        language={country.languages}\n        key={index}>\n      </PrintCountry>)\n    }\n      <div>\n    {\n     <PrintWeatherOfCountry \n     name={getCapitalName.name}\n     temperature={getWeather.temperature}\n     icon={getWeather.weather_icons}\n     description={getWeather.weather_descriptions}\n     windspeed={getWeather.wind_speed}\n     winddirection={getWeather.wind_dir}\n     >\n     </PrintWeatherOfCountry>\n    }\n      </div>\n    </div>\n    ) \n  }\n \n  return searchBar.map((country, index) => \n    <PrintListOfCountries\n      name={country.name} \n      key={index}\n      warning={country.warning}\n      getOne={handleShowClick}>\n    </PrintListOfCountries>\n    )\n  }\n\n  return ( \n  <div>  \n      <p><strong>Find countries</strong> <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n      <ViewControl selected={selectedCountry}/>\n  </div>\n  )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}