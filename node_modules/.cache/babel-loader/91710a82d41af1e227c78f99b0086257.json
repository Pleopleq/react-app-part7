{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintListOfCountries = ({\n  name,\n  warning,\n  index\n}) => {\n  const getOneCountry = () => {\n    axios.get(`https://restcountries.eu/rest/v2/name/${name}`).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  if (warning) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, warning);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: getOneCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 31\n      }\n    }, \"Show\")));\n  }\n};\n\nconst PrintCountry = ({\n  name,\n  capital,\n  population,\n  flag,\n  language,\n  index,\n  warning\n}) => {\n  if (warning) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }\n    }, warning);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, \"Capital: \", capital), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, \"Population: \", population), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, \"Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, language.map((element, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }, element.name);\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: flag,\n      width: 240,\n      alt: 'country flag',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }));\n  }\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = () => {\n    return copycountries = countries;\n  };\n\n  let countryToSearchToUpper = ''; //Make the first letter of the search query uppercase\n\n  if (countryToSearch !== '') {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n\n  if (countryToSearch === '') {\n    searchBar = [];\n  }\n\n  if (searchBar.length > 10) {\n    searchBar = [{\n      warning: 'Woops, too many matches. Be more specific'\n    }];\n  }\n\n  console.log(copyOfContries);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  })), searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintListOfCountries, {\n    name: country.name,\n    warning: country.warning,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","PrintListOfCountries","name","warning","index","getOneCountry","get","then","response","console","log","data","PrintCountry","capital","population","flag","language","map","element","App","countries","setContries","newSearch","setNewSearch","handleSearchBarChange","event","target","value","countryToSearch","copyOfContries","copycountries","countryToSearchToUpper","charAt","toUpperCase","substring","searchBar","filter","el","includes","length","country","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintListOfCountries = ({name, warning, index}) =>{\n  const getOneCountry = () => {\n    axios\n    .get(`https://restcountries.eu/rest/v2/name/${name}`)\n    .then(response => {\n      console.log(response.data)\n    })\n  }\n\n  if(warning){\n    return <h1>{warning}</h1>\n  } else {\n    return (\n      <div>\n        <p key={index}>{name} <button onClick={getOneCountry}>Show</button></p> \n      </div>\n    )\n  }\n}\n\nconst PrintCountry = ({name, capital, population, flag, language,  index, warning}) =>{\nif(warning){\n  return <h1>{warning}</h1>\n} else { \n  return (\n  <div>\n    <h1 key={index}>{name}</h1>\n    <p>Capital: {capital}</p> \n    <p>Population: {population}</p>\n    <h2>Languages</h2>\n    <ul>\n    {language.map((element, index) => {\n      return <li key={index}>{element.name}</li>\n    })}\n    </ul>\n    <img src={flag} width={240} alt={'country flag'}></img>\n  </div>\n  ) \n  }\n}\n\nconst App = () => {\n\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = () =>{\n    return copycountries = countries;\n  }\n \n  let countryToSearchToUpper = '';\n\n  //Make the first letter of the search query uppercase\n  if(countryToSearch !== ''){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n\n  //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n  if(countryToSearch === ''){\n    searchBar = [];\n  }\n\n  if(searchBar.length > 10){\n    searchBar = [{ warning: 'Woops, too many matches. Be more specific'}]\n  }\n  console.log(copyOfContries)\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n    })\n  }, [])\n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n      {\n      searchBar.map((country, index) =>\n      <PrintListOfCountries name={country.name} warning={country.warning} key={index}></PrintListOfCountries> )}  \n  </div>\n  )\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}