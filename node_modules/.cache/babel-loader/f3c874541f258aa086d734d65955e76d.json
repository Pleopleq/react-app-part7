{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintListOfCountries = ({\n  name,\n  warning,\n  index,\n  getOne\n}) => {\n  if (warning) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 12\n      }\n    }, warning);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, name, \"  \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: getOne,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 32\n      }\n    }, \"Show\")));\n  }\n};\n\nconst PrintCountry = ({\n  name,\n  capital,\n  population,\n  flag,\n  language\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Capital: \", capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, \"Population: \", population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, language.map((element, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }\n    }, element.name);\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: flag,\n    width: 240,\n    alt: 'country flag',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  let selected = false;\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const handleShowClick = event => {\n    let name = event.target.parentNode.innerText.replace('Show', '');\n    axios.get(`https://restcountries.eu/rest/v2/name/${name}`).then(response => {\n      setSelectedCountry(response.data);\n      selected = true;\n    });\n    selected = true;\n  };\n\n  const countryToSearch = newSearch;\n  const copyOfContries = countries;\n  let countryToSearchToUpper = ''; //Make the first letter of the search query uppercase\n\n  if (countryToSearch !== '') {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n\n  if (countryToSearch === '') {\n    searchBar = [];\n  }\n\n  if (searchBar.length > 10) {\n    searchBar = [{\n      warning: 'Woops, too many matches. Be more specific'\n    }];\n  }\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  console.log(selected);\n\n  const ViewControl = ({\n    selected\n  }) => {\n    if (selected) {\n      return selectedCountry.map(country => /*#__PURE__*/React.createElement(PrintCountry, {\n        name: country.name,\n        capital: country.capital,\n        population: country.population,\n        flag: country.flag,\n        language: country.languages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintListOfCountries, {\n      name: country.name,\n      key: index,\n      warning: country.warning,\n      getOne: handleShowClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }));\n  }; // const listOfCountries = \n  // console.log('Selected', selectedCountry)\n  // let specificCountry = \n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(ViewControl, {\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","PrintListOfCountries","name","warning","index","getOne","PrintCountry","capital","population","flag","language","map","element","App","countries","setContries","newSearch","setNewSearch","selectedCountry","setSelectedCountry","selected","handleSearchBarChange","event","target","value","handleShowClick","parentNode","innerText","replace","get","then","response","data","countryToSearch","copyOfContries","countryToSearchToUpper","charAt","toUpperCase","substring","searchBar","filter","el","includes","length","console","log","ViewControl","country","languages","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\n\n\nconst PrintListOfCountries = ({name, warning, index, getOne}) =>{\n\n  if(warning){\n    return <h1>{warning}</h1>\n  } else {\n    return (\n      <div>\n        <p key={index}>{name}  <button onClick={getOne}>Show</button></p>\n      </div>\n    )\n  }\n}\n\nconst PrintCountry = ({name, capital, population, flag, language}) =>{\n  return (\n  <div>\n    <h1>{name}</h1>\n    <p>Capital: {capital}</p> \n    <p>Population: {population}</p>\n    <h2>Languages</h2>\n    <ul>\n    {language.map((element, index) => {\n      return <li key={index}>{element.name}</li>\n    })}\n    </ul>\n    <img src={flag} width={240} alt={'country flag'}></img>\n  </div>\n  ) \n}\n\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState([]);\n  let selected = false;\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const handleShowClick = (event) =>{\n    let name = event.target.parentNode.innerText.replace('Show','')\n    axios\n    .get(`https://restcountries.eu/rest/v2/name/${name}`)\n    .then(response => {\n      setSelectedCountry(response.data)\n      selected = true;\n    })\n    selected = true;\n  }\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = countries;\n\n  let countryToSearchToUpper = '';\n\n  //Make the first letter of the search query uppercase\n  if(countryToSearch !== ''){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n  //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n  if(countryToSearch === ''){\n    searchBar = [];\n  }\n\n  if(searchBar.length > 10){\n    searchBar = [{ warning: 'Woops, too many matches. Be more specific'}]\n  }\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n      console.log(response.data)\n    })\n  },[])\n\n  console.log(selected)\n  const ViewControl = ({selected}) =>{\n    if(selected){\n      return selectedCountry.map(country => \n        <PrintCountry \n        name={country.name} \n        capital={country.capital} \n        population={country.population} \n        flag={country.flag}\n        language={country.languages}>\n        </PrintCountry>\n      )    \n    } \n    return searchBar.map((country, index) =>    \n    <PrintListOfCountries\n    name={country.name} \n    key={index}\n    warning={country.warning}\n    getOne={handleShowClick}>\n    </PrintListOfCountries>)\n\n  }\n  // const listOfCountries = \n\n  // console.log('Selected', selectedCountry)\n\n  // let specificCountry = \n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n      <ViewControl selected={selected}/>\n    {/* <div>{listOfCountries}</div>\n    <div>{specificCountry}</div> */}\n  </div>\n  )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}