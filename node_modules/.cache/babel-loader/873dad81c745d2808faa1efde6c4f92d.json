{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintData = ({\n  country,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }\n  }, country);\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState(undefined);\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const countryToSearch = newSearch;\n  let copyOfContries = countries;\n  let countryToSearchToUpper = undefined;\n\n  if (countryToSearch !== undefined) {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n    console.log('countryToSearchToUpper', countryToSearchToUpper);\n  } else if (countryToSearchToUpper === '') {\n    countryToSearchToUpper = undefined;\n    console.log('Inner', countryToSearchToUpper);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"debug: \", newSearch), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, searchBar.map((country, index) => /*#__PURE__*/React.createElement(PrintData, {\n    country: country.name,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }))));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","PrintData","country","index","App","countries","setContries","newSearch","setNewSearch","undefined","handleSearchBarChange","event","target","value","countryToSearch","copyOfContries","countryToSearchToUpper","charAt","toUpperCase","substring","console","log","searchBar","filter","el","name","includes","get","then","response","data","map","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqB;AACnC,sBAAO;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,OAAjB,CAAP;AACH,CAFD;;AAKA,MAAME,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA6BX,QAAQ,CAACY,SAAD,CAA3C;;AAEA,QAAMC,qBAAqB,GAAGC,KAAK,IAAG;AACpCH,IAAAA,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAGP,SAAxB;AAEA,MAAIQ,cAAc,GAAGV,SAArB;AAEA,MAAIW,sBAAsB,GAAGP,SAA7B;;AAEA,MAAGK,eAAe,KAAKL,SAAvB,EAAiC;AAC/BO,IAAAA,sBAAsB,GAAGF,eAAe,CAACG,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CJ,eAAe,CAACK,SAAhB,CAA0B,CAA1B,CAAnE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCL,sBAAtC;AACD,GAHD,MAGO,IAAIA,sBAAsB,KAAK,EAA/B,EAAmC;AACxCA,IAAAA,sBAAsB,GAAGP,SAAzB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,sBAArB;AACD;;AAED,MAAIM,SAAS,GAAGP,cAAc,CAACQ,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQC,QAAR,CAAiBV,sBAAjB,CAA5B,CAAhB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACJ2B,GADD,CACK,sCADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBvB,MAAAA,WAAW,CAACuB,QAAQ,CAACC,IAAV,CAAX;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkB;AAClB,IAAA,KAAK,EAAEvB,SADW;AAElB,IAAA,QAAQ,EAAEG,qBAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADJ,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaH,SAAb,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,SAAS,CAACS,GAAV,CAAc,CAAC7B,OAAD,EAAUC,KAAV,kBACb,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAED,OAAO,CAACuB,IAA5B;AAAkC,IAAA,GAAG,EAAEtB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CADA;AAcD,CA/CD;;AAkDAJ,QAAQ,CAACiC,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nconst PrintData = ({country, index}) =>{\n    return <li key={index}>{country}</li>\n}\n\n\nconst App = () => {\n\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch ] = useState(undefined);\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const countryToSearch = newSearch;\n\n  let copyOfContries = countries;\n\n  let countryToSearchToUpper = undefined;\n\n  if(countryToSearch !== undefined){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n    console.log('countryToSearchToUpper', countryToSearchToUpper)\n  } else if( countryToSearchToUpper === '') {\n    countryToSearchToUpper = undefined;\n    console.log('Inner', countryToSearchToUpper)\n  }\n  \n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n    })\n  }, [])\n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n    <div>debug: {newSearch}</div>\n    <ul>\n      {searchBar.map((country, index ) =>\n        <PrintData country={country.name} key={index}></PrintData>\n      )}\n    </ul>\n  </div>\n  )\n}\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}