{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FULL\\\\Documents\\\\WebDev\\\\reactFullStackOpen\\\\part7\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nlet singleCountry = [];\n\nconst ViewControl = ({\n  name,\n  capital,\n  population,\n  flag,\n  language,\n  warning,\n  index\n}) => {\n  if (singleCountry.length === 1) {\n    return /*#__PURE__*/React.createElement(PrintCountry, {\n      name: name,\n      warning: warning,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(PrintListOfCountries, {\n    name: name,\n    capital: capital,\n    population: population,\n    flag: flag,\n    language: language,\n    key: index,\n    warning: warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  });\n};\n\nconsole.log(singleCountry);\n\nconst PrintListOfCountries = ({\n  name,\n  warning,\n  index\n}) => {\n  const getOneCountry = () => {\n    axios.get(`https://restcountries.eu/rest/v2/name/${name}`).then(response => {\n      singleCountry = response.data;\n    });\n  };\n\n  singleCountry = [];\n\n  if (warning) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, warning);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, name, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: getOneCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 31\n      }\n    }, \"Show\")));\n  }\n};\n\nconst PrintCountry = ({\n  name,\n  capital,\n  population,\n  flag,\n  language,\n  index\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Capital: \", capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Population: \", population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, language.map((element, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }\n    }, element.name);\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: flag,\n    width: 240,\n    alt: 'country flag',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst App = () => {\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const countryToSearch = newSearch;\n  const copyOfContries = countries;\n  let countryToSearchToUpper = ''; //Make the first letter of the search query uppercase\n\n  if (countryToSearch !== '') {\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper)); //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n\n  if (countryToSearch === '') {\n    searchBar = [];\n  }\n\n  if (searchBar.length > 10) {\n    searchBar = [{\n      warning: 'Woops, too many matches. Be more specific'\n    }];\n  }\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setContries(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newSearch,\n    onChange: handleSearchBarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })), searchBar.map((country, index) => /*#__PURE__*/React.createElement(ViewControl, {\n    name: country.name,\n    warning: country.warning,\n    key: index,\n    capital: country.capital,\n    population: country.population,\n    flag: country.flag,\n    language: country.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  })));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/FULL/Documents/WebDev/reactFullStackOpen/part7/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","singleCountry","ViewControl","name","capital","population","flag","language","warning","index","length","console","log","PrintListOfCountries","getOneCountry","get","then","response","data","PrintCountry","map","element","App","countries","setContries","newSearch","setNewSearch","handleSearchBarChange","event","target","value","countryToSearch","copyOfContries","countryToSearchToUpper","charAt","toUpperCase","substring","searchBar","filter","el","includes","country","languages","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,aAAa,GAAG,EAApB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA,QAAlC;AAA4CC,EAAAA,OAA5C;AAAqDC,EAAAA;AAArD,CAAD,KAAgE;AAClF,MAAGR,aAAa,CAACS,MAAd,KAAyB,CAA5B,EAA8B;AAC5B,wBAAO,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEP,IAApB;AAA0B,MAAA,OAAO,EAAEK,OAAnC;AAA4C,MAAA,KAAK,EAAEC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACC,sBAAO,oBAAC,oBAAD;AACP,IAAA,IAAI,EAAEN,IADC;AAEP,IAAA,OAAO,EAAEC,OAFF;AAGP,IAAA,UAAU,EAAEC,UAHL;AAIP,IAAA,IAAI,EAAEC,IAJC;AAKP,IAAA,QAAQ,EAAEC,QALH;AAMP,IAAA,GAAG,EAAEE,KANE;AAOP,IAAA,OAAO,EAAED,OAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AASH,CAbD;;AAcAG,OAAO,CAACC,GAAR,CAAYX,aAAZ;;AACA,MAAMY,oBAAoB,GAAG,CAAC;AAACV,EAAAA,IAAD;AAAOK,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AAEtD,QAAMK,aAAa,GAAG,MAAM;AAC1Bd,IAAAA,KAAK,CACJe,GADD,CACM,yCAAwCZ,IAAK,EADnD,EAECa,IAFD,CAEMC,QAAQ,IAAI;AAChBhB,MAAAA,aAAa,GAAGgB,QAAQ,CAACC,IAAzB;AACD,KAJD;AAKD,GAND;;AAOAjB,EAAAA,aAAa,GAAG,EAAhB;;AAEA,MAAGO,OAAH,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAL,CAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,GAAG,EAAEC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBN,IAAhB,oBAAsB;AAAQ,MAAA,OAAO,EAAEW,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtB,CADF,CADF;AAKD;AACF,CApBD;;AAsBA,MAAMK,YAAY,GAAG,CAAC;AAAChB,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA,QAAlC;AAA4CE,EAAAA;AAA5C,CAAD,KAAuD;AAC1E,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaC,OAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBC,UAAhB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,QAAQ,CAACa,GAAT,CAAa,CAACC,OAAD,EAAUZ,KAAV,KAAoB;AAChC,wBAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBY,OAAO,CAAClB,IAAzB,CAAP;AACD,GAFA,CADD,CALF,eAUE;AAAK,IAAA,GAAG,EAAEG,IAAV;AAAgB,IAAA,KAAK,EAAE,GAAvB;AAA4B,IAAA,GAAG,EAAE,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADA;AAcD,CAfD;;AAkBA,MAAMgB,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2B3B,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAM8B,qBAAqB,GAAGC,KAAK,IAAG;AACpCF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAGN,SAAxB;AAEA,QAAMO,cAAc,GAAGT,SAAvB;AAEA,MAAIU,sBAAsB,GAAG,EAA7B,CAbgB,CAehB;;AACA,MAAGF,eAAe,KAAK,EAAvB,EAA0B;AACxBE,IAAAA,sBAAsB,GAAGF,eAAe,CAACG,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CJ,eAAe,CAACK,SAAhB,CAA0B,CAA1B,CAAnE;AACD;;AAED,MAAIC,SAAS,GAAGL,cAAc,CAACM,MAAf,CAAsBC,EAAE,IAAIA,EAAE,CAACpC,IAAH,CAAQqC,QAAR,CAAiBP,sBAAjB,CAA5B,CAAhB,CApBgB,CAsBhB;AACA;;AACA,MAAGF,eAAe,KAAK,EAAvB,EAA0B;AACxBM,IAAAA,SAAS,GAAG,EAAZ;AACD;;AAED,MAAGA,SAAS,CAAC3B,MAAV,GAAmB,EAAtB,EAAyB;AACvB2B,IAAAA,SAAS,GAAG,CAAC;AAAE7B,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAZ;AACD;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACJe,GADD,CACK,sCADL,EAECC,IAFD,CAEMC,QAAQ,IAAI;AAChBO,MAAAA,WAAW,CAACP,QAAQ,CAACC,IAAV,CAAX;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAkB;AAClB,IAAA,KAAK,EAAEO,SADW;AAElB,IAAA,QAAQ,EAAEE,qBAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADJ,EAKKU,SAAS,CAACjB,GAAV,CAAc,CAACqB,OAAD,EAAUhC,KAAV,kBACf,oBAAC,WAAD;AACA,IAAA,IAAI,EAAEgC,OAAO,CAACtC,IADd;AAEA,IAAA,OAAO,EAAEsC,OAAO,CAACjC,OAFjB;AAGA,IAAA,GAAG,EAAEC,KAHL;AAIA,IAAA,OAAO,EAAEgC,OAAO,CAACrC,OAJjB;AAKA,IAAA,UAAU,EAAEqC,OAAO,CAACpC,UALpB;AAMA,IAAA,IAAI,EAAEoC,OAAO,CAACnC,IANd;AAOA,IAAA,QAAQ,EAAEmC,OAAO,CAACC,SAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CALL,CADA;AAkBD,CA1DD;;AA4DA3C,QAAQ,CAAC4C,MAAT,eACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\n\nlet singleCountry = [];\n\nconst ViewControl = ({name, capital, population, flag, language, warning, index}) =>{\n  if(singleCountry.length === 1){\n    return <PrintCountry name={name} warning={warning} index={index}/>\n  }\n    return <PrintListOfCountries\n    name={name} \n    capital={capital} \n    population={population} \n    flag={flag}\n    language={language}\n    key={index}\n    warning={warning}\n    />\n}\nconsole.log(singleCountry)\nconst PrintListOfCountries = ({name, warning, index}) =>{\n\n  const getOneCountry = () => {\n    axios\n    .get(`https://restcountries.eu/rest/v2/name/${name}`)\n    .then(response => {\n      singleCountry = response.data;\n    })\n  }\n  singleCountry = [];\n\n  if(warning){\n    return <h1>{warning}</h1>\n  } else {\n    return (\n      <div>\n        <p key={index}>{name} <button onClick={getOneCountry}>Show</button></p> \n      </div>\n    )\n  }\n}\n\nconst PrintCountry = ({name, capital, population, flag, language, index}) =>{\n  return (\n  <div>\n    <h1>{name}</h1>\n    <p>Capital: {capital}</p> \n    <p>Population: {population}</p>\n    <h2>Languages</h2>\n    <ul>\n    {language.map((element, index) => {\n      return <li key={index}>{element.name}</li>\n    })}\n    </ul>\n    <img src={flag} width={240} alt={'country flag'}></img>\n  </div>\n  ) \n}\n\n\nconst App = () => {\n\n  const [countries, setContries] = useState([]);\n  const [newSearch, setNewSearch] = useState('');\n\n  const handleSearchBarChange = event =>{\n    setNewSearch(event.target.value);\n  }\n\n  const countryToSearch = newSearch;\n\n  const copyOfContries = countries;\n\n  let countryToSearchToUpper = '';\n\n  //Make the first letter of the search query uppercase\n  if(countryToSearch !== ''){\n    countryToSearchToUpper = countryToSearch.charAt(0).toUpperCase() + countryToSearch.substring(1);\n  }\n\n  let searchBar = copyOfContries.filter(el => el.name.includes(countryToSearchToUpper));\n\n  //Set the countries array to an empty array to prevent to print all\n  //the contries at once\n  if(countryToSearch === ''){\n    searchBar = [];\n  }\n\n  if(searchBar.length > 10){\n    searchBar = [{ warning: 'Woops, too many matches. Be more specific'}]\n  }\n\n  useEffect(() => {\n    axios\n    .get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n      setContries(response.data)\n    })\n  }, [])\n\n  return ( \n  <div>  \n      <p>find countries <input \n      value={newSearch}\n      onChange={handleSearchBarChange}/>\n      </p>\n      {searchBar.map((country, index) =>\n      <ViewControl \n      name={country.name} \n      warning={country.warning} \n      key={index} \n      capital={country.capital} \n      population={country.population} \n      flag={country.flag}\n      language={country.languages}\n      /> )}\n  </div>\n  )\n}\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}